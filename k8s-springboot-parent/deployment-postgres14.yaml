apiVersion: apps/v1
kind: Deployment
#datos como valores clave valor para identificar deployment
metadata:
  labels:
    app: postgres14
  #nombre de deployment
  name: postgres14
#se detalla la especificacion del deployment
spec:
  #especifica la cantidad de instancias que tendr√° el pod
  replicas: 1
  selector:
    #indica que pod con label especifico va estar asociado
    matchLabels:
      #este valor debe ser igual a template.metadata.labels.app para enlazar pod a deployment
      app: postgres14
  #Detalle de configuracion de pod
  template:
    metadata:
      labels:
        app: postgres14
    #especificacion del pod asociado a deployment
    spec:
      #es una lista donde se especifica los contenedores e images a usar
      containers:
      #identificador de imagen
      - image: postgres:14.1-alpine
        #nombre del pod a crear
        name: postgres14
        #detallar puertos a especificar
        ports:
        #puerto interno del pod
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          #seteo de variable en deployment
          #value: "ms_cursos"

          #seteo de variables desde configmap
          valueFrom:
            configMapKeyRef:
              name: configmap-ms-cursos
              key: db_database

        - name: POSTGRES_USER
          #seteo de variable en deployment
          #value: "postgres"

          valueFrom:
            #seteo de variables desde configmap
            #configMapKeyRef:
              #name: configmap-ms-cursos
              #key: db_username

            #seteo de variables desde secret
            secretKeyRef:
              name: secret-ms-cursos
              key: db_username

        - name: POSTGRES_PASSWORD
          #seteo de variable en deployment
          #value: "postgres"

          valueFrom:
            #seteo de variables desde configmap
            #configMapKeyRef:
              #name: configmap-ms-cursos
              #key: db_password

            #seteo de variables desde secret
            secretKeyRef:
              name: secret-ms-cursos
              key: db_password

        #Configura uso de volumenes en contenedores
        volumeMounts:
          #Nombre de volumen a usar
          - name: data-postgres
            #Ruta en el pod donde estara alojado los registros
            mountPath: "/var/lib/postgresql/data"
        #Creando volumen en el equipo fisico o worker node
      volumes:
        - name: data-postgres
          #Caso se quiera definir volume desde pod
          #hostPath:
            #path: "/var/lib/postgresql/data"
            #Indica que en caso no exista volumen lo cree caso contrario lo use
            #type: "DirectoryOrCreate"

          #En caso usar un persistentVolumeClaim para que el volumen sea independiente del pod
          persistentVolumeClaim:
            #nombre de persistentVolumeClaim para asociar
            claimName: postgres14-pvc